module(
    name = "robotpy-bazel",
    version = "1.0.0"
)

bazel_dep(name = "rules_python", version = "1.3.0")
single_version_override(
    module_name = "rules_python",
    version = "1.3.0",
    patches = [
        "//:third_party/rules_python/0001-Ignore-uv-build-artifacts-in-manifest.patch",
        "//:third_party/rules_python/0002-Make-uv-current-toolchain-visibility-public.patch",
    ],
    patch_strip = 1,
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.11")
python.toolchain(python_version = "3.13")
use_repo(python, "python_3_11", "python_3_13", "python_versions")

uv = use_extension(
    "@rules_python//python/uv:uv.bzl",
    "uv",
    # Use `dev_dependency` so that the toolchain isn't defined when this module
    # is used elsewhere.
    dev_dependency = True,
)
uv.configure(version = "0.6.14")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "robotpy_bazel_pip_deps",
    python_version = "3.13",
    requirements_lock = "//:requirements_lock.txt",
    experimental_index_url = "https://pypi.org/simple",
    download_only = True,
)
use_repo(pip, "robotpy_bazel_pip_deps")

bazel_dep(name = "rules_pkg", version = "1.1.0")

bazel_dep(name = "com_github_mvukov_rules_ros2", version = "0.0.0")
git_override(
    module_name = "com_github_mvukov_rules_ros2",
    remote = "https://github.com/mvukov/rules_ros2.git",
    commit = "734502ebb65e3c8d23cf33523adbdc930aa53f30",
)

rules_ros2_non_module_deps = use_extension("@com_github_mvukov_rules_ros2//ros2:extensions.bzl", "non_module_deps")
use_repo(
    rules_ros2_non_module_deps,
    "ros2_common_interfaces",
    "ros2_rclpy",
    # ros2cli and ros2_launch_ros are required to run a ros2_launch target
    "ros2cli",
    "ros2_launch_ros",
)
